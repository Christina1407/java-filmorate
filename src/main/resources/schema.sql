create table if not exists "user"
(
    user_id bigint generated by default as identity primary key,
    email     varchar(100) not null,
    login   varchar(200) not null,
    name     varchar(500),
    birthday date
);

create table if not exists "film"
(
    film_id bigint generated by default as identity primary key,
    name     varchar(500) not null,
    description   varchar(200),
    releaseDate date not null,
    duration int not null,
    ratingMPA varchar(200)
);

create table if not exists "genre"
(
    genre_id bigint generated by default as identity primary key,
    name     varchar(500) not null
);

create table if not exists "friendship"
(
    friendship_id bigint generated by default as identity primary key,
    user_id     bigint not null,
    friend_id   bigint not null,
    relation_type varchar(200) not null,
    CONSTRAINT fk_friendship_user_id
      FOREIGN KEY(user_id)
      REFERENCES "user"(user_id),
    CONSTRAINT fk_friendship_friend_id
      FOREIGN KEY(friend_id)
      REFERENCES "user"(user_id)
);

create table if not exists "film_genre"
(
    film_genre_id bigint generated by default as identity primary key,
    film_id     bigint not null,
    genre_id    int not null,
    CONSTRAINT fk_film_genre_film_id
      FOREIGN KEY(film_id)
      REFERENCES "film"(film_id),
    CONSTRAINT fk_film_genre_genre_id
      FOREIGN KEY(genre_id)
      REFERENCES "genre"(genre_id)
);

create table if not exists "film_like"
(
    film_like_id bigint generated by default as identity primary key,
    film_id     bigint not null,
    user_id    bigint not null,
    CONSTRAINT fk_film_like_film_id
      FOREIGN KEY(film_id)
      REFERENCES "film"(film_id),
    CONSTRAINT fk_film_like_user_id
      FOREIGN KEY(user_id)
      REFERENCES "user"(user_id)
);